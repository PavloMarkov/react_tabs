{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","tabs","selectedTabId","onTabSelected","tabContent","find","tab","id","className","map","classNames","href","onClick","title","content","App","useState","selectedTab","setSelectedTab","newTab","link","ind","indexOf","ReactDOM","render","document","getElementById"],"mappings":"uLAWaA,EAAwB,SAACC,GACpC,IACEC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,cACAC,EACEH,EADFG,cAGIC,EAAaH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAE/C,OACE,qCACE,qBACEM,UAAU,gBADZ,SAGE,6BACGP,EAAKQ,KAAI,SAACH,GAAD,OACR,oBAEEE,UAAWE,IACT,CACE,YAAaJ,EAAIC,KAAOL,IACvBE,GAAcE,IAAQL,EAAK,KALlC,SASE,mBACEU,KAAI,WAAML,EAAIC,IACdK,QAAS,WACHV,IAAkBI,EAAIC,IACxBJ,EAAcG,IAJpB,SAQGA,EAAIO,SAhBFP,EAAIC,WAuBjB,qBACEC,UAAU,QACV,UAAQ,cAFV,gBAIGJ,QAJH,IAIGA,OAJH,EAIGA,EAAYU,cCjDRb,EAAO,CAClB,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASf,EAAK,IAApD,mBAAOgB,EAAP,KAAoBC,EAApB,KASA,OACE,sBAAKV,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,gCAEGS,EAAYJ,SAGf,8BACE,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAAee,EAAYV,GAC3BJ,cAlBc,SAACG,GACrB,IAAMa,EAASlB,EAAKI,MAAK,SAAAe,GAAI,OAAIA,EAAKb,KAAOD,EAAIC,OAAON,EAAK,GACvDoB,EAAMpB,EAAKqB,QAAQH,GAEzBD,EAAejB,EAAKoB,aChBxBE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d3267346.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: Callback;\n};\n\ntype Callback = (tab: Tab) => void;\n\nexport const Tabs: React.FC<Props> = (props: Props) => {\n  const {\n    tabs,\n    selectedTabId,\n    onTabSelected,\n  } = props;\n\n  const tabContent = tabs.find(tab => tab.id === selectedTabId);\n\n  return (\n    <>\n      <div\n        className=\"tabs is-boxed\"\n      >\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              key={tab.id}\n              className={classNames(\n                {\n                  'is-active': tab.id === selectedTabId\n              || (!tabContent && tab === tabs[0]),\n                },\n              )}\n            >\n              <a\n                href={`#${tab.id}`}\n                onClick={() => {\n                  if (selectedTabId !== tab.id) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          )) }\n        </ul>\n      </div>\n\n      <div\n        className=\"block\"\n        data-cy=\"tab-content\"\n      >\n        {tabContent?.content}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Tabs } from './components/Tabs/Tabs';\nimport { Tab } from './components/types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const onTabSelected = (tab: Tab): void => {\n    const newTab = tabs.find(link => link.id === tab.id) || tabs[0];\n    const ind = tabs.indexOf(newTab);\n\n    setSelectedTab(tabs[ind]);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is&nbsp;\n        {selectedTab.title}\n      </h1>\n\n      <div>\n        <Tabs\n          tabs={tabs}\n          selectedTabId={selectedTab.id}\n          onTabSelected={onTabSelected}\n        />\n\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}